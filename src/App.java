import java.util.Arrays; // Библиотека для работы со списками (в моём случае была использована для сортировки массива)
import java.util.Scanner; // Библиотека которая считывает данные которые ввёл пользоатель (так же нужна для бинанрого поиска)

public class App { // Класс в котором лежат все методы
    private static int sum(int[] arr, int index) { // Метод для подсчёта суммы элементов из массива
        if (index >= arr.length) {  // Базовый случай, что бы рекурсия поняла что всё элементы обработаны
            return 0; // Когда все элементы обработаны, вернем 0, т.к сумма больше не увеличиться 
        } else { 
            return arr[index] + sum(arr, index + 1); // Рекурсивный метод который считает сумму всех чисел
        }
    }
    private static int max(int[] arr, int index) { // Метод для поиска самого большего значения массива
        if (index >= arr.length) { // Базовый случай, что бы рекурсия поняла что всё элементы обработаны
            return Integer.MIN_VALUE; // Вернуть минимальное значение для начала сравнения
        } else {
           return Math.max(arr[index], max(arr, index + 1)); // Сравнение с помощью рекурсии
        }  
     }

     private static boolean binarySearch(int[] arr, int left, int right, int target) { // Метод для проверки на наличие элемента в массиве
        if (left > right) { // Базовый случай, говорит что диапазон поиска исчерпан
            return false; // Вернуть false, т.к элемента не существует в массиве
        } 
            int mid = left + (right - left) / 2; // Бинарный поиск, нахождение среднего значения


        if (arr[mid] == target) { // Если среднее значение равно искомому элементу
           return true; // Вернуть true
        } 

        if (arr[mid] > target) { // Если среднее значение больше чем искомый элемент
            return binarySearch(arr, left, mid - 1, target); // Тогда ищем в левой части массива
        } else {
            return binarySearch(arr, mid + 1, right, target); // Если среднее значение меньше, то ищем в правой части массива
        }
    }
    public static void main(String[] args) { // Основной метод с которого всё начинается.
        int[] arr = {1, 9, 2, 3, 5};  // Массив с которым будут проводиться вычисления
        Arrays.sort(arr); // Нужно для сортировки массива, т.к бинарный поиск работает только с отсортированными массивами

        // Класс который нужен для того что бы пользователь ввёл свои данные
        Scanner scanner = new Scanner(System.in);
        System.out.println("Введите число для поиска в массиве");
        int target = scanner.nextInt();

        // Поиск внутри массива
        boolean found = binarySearch(arr, 0, arr.length - 1, target);

        if (found) { // Если элемент найден
            System.out.println("Это число есть в массиве"); // Если элемент найден, то выводится это сообщение
        } else {
            System.out.println("Такого числа нету в списке"); // Если не найден выводится это
        }

        scanner.close(); // Закрываем scanner, для освобождения места

        System.out.println("Сумма элементов массива: " + sum(arr, 0)); // Это сообщение показывает нам сумму всех элементов в массиве
        System.out.println("Максимальное значение в массиве: " + max(arr, 0)); // Это сообщение показывает максимальный элемент(его значение)
    }   
}






